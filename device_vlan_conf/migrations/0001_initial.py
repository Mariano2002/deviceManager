# Generated by Django 3.2.7 on 2021-11-17 15:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=300)),
                ('SN', models.CharField(help_text='1234-5678-90AB', max_length=14)),
                ('NAME', models.CharField(help_text='Device 1', max_length=100)),
                ('DEVICE_ID', models.IntegerField(help_text='150')),
                ('DEVICE_NOTES', models.CharField(blank=True, help_text='This is a device', max_length=999)),
                ('VLANS', models.CharField(blank=True, max_length=9999)),
                ('LAN_NETWORK_LIST', models.CharField(blank=True, help_text='192.168.0.1/24', max_length=25)),
                ('LAN_MEDIA', models.CharField(blank=True, max_length=20)),
                ('LAN_L2_ISO', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='yes, no', max_length=3)),
                ('LAN_STROUTEn', models.CharField(blank=True, help_text='172.16.0.0/12:192.168.0.1', max_length=60)),
                ('DHCP_SERVER', models.CharField(blank=True, choices=[('Enable', 'Enable'), ('Disable', 'Disable'), ('Relay', 'Relay')], help_text='enable, disable, relay', max_length=7)),
                ('DHCP_SERVER_LEASE', models.CharField(blank=True, help_text='86400', max_length=20)),
                ('DHCP_SERVER_NETMASK', models.CharField(blank=True, help_text='255.255.255.0', max_length=20)),
                ('DHCP_SERVER_POOL_START', models.CharField(blank=True, help_text='192.168.0.1', max_length=20)),
                ('DHCP_SERVER_POOL_END', models.CharField(blank=True, help_text='192.168.0.255', max_length=20)),
                ('DHCP_RESERVATION', models.CharField(blank=True, help_text='AB:CD:EF:01:23:45#127.0.0.1#optional-name-field', max_length=60)),
                ('DHCP_LOG_ENABLE', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='yes, no', max_length=3)),
                ('DHCP_SERVER_DNS', models.CharField(blank=True, help_text='192.168.0.1 192.168.0.2', max_length=60)),
                ('DHCP_SERVER_WINS', models.CharField(blank=True, help_text='192.168.0.1 192.168.0.2, default', max_length=60)),
                ('DHCP_OPTION_15', models.CharField(blank=True, help_text='example.com', max_length=20)),
                ('DHCP_RELAY_OPTION_82', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='yes, no', max_length=3)),
                ('DHCP_RELAY_SERVER', models.CharField(blank=True, help_text='192.168.0.1 192.168.0.2', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='VLAN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=300)),
                ('LANn_VLAN_ID', models.IntegerField(help_text='1-4094')),
                ('LANn_NAME', models.CharField(help_text='"VLAN 1", "Marketing Network", etc', max_length=100)),
                ('LANn_NETWORK_LIST', models.CharField(blank=True, help_text='192.168.0.1/24', max_length=25)),
                ('LANn_NOTES', models.CharField(blank=True, help_text='Notes for the VLAN', max_length=999)),
                ('LANn_L2_ISO', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='yes, no', max_length=3)),
                ('DHCPn_SERVER', models.CharField(blank=True, choices=[('Enable', 'Enable'), ('Disable', 'Disable'), ('Relay', 'Relay')], help_text='enable, disable, relay', max_length=7)),
                ('DHCPn_SERVER_LEASE', models.CharField(blank=True, help_text='86400', max_length=20)),
                ('DHCPn_SERVER_NETMASK', models.CharField(blank=True, help_text='255.255.255.0', max_length=20)),
                ('DHCPn_SERVER_POOL_START', models.CharField(blank=True, help_text='192.168.0.1', max_length=20)),
                ('DHCPn_SERVER_POOL_END', models.CharField(blank=True, help_text='192.168.0.255', max_length=20)),
                ('DHCPn_RESERVATION', models.CharField(blank=True, help_text='AB:CD:EF:01:23:45#127.0.0.1#optional-name-field', max_length=60)),
                ('DHCPn_LOG_ENABLE', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='yes, no', max_length=3)),
                ('DHCPn_SERVER_DNS', models.CharField(blank=True, help_text='192.168.0.1 192.168.0.2', max_length=60)),
                ('DHCPn_SERVER_WINS', models.CharField(blank=True, help_text='192.168.0.1 192.168.0.2, default', max_length=60)),
                ('DHCPn_OPTION_15', models.CharField(blank=True, help_text='example.com', max_length=20)),
                ('DHCPn_RELAY_OPTION_82', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='yes, no', max_length=3)),
                ('DHCPn_RELAY_SERVER', models.CharField(blank=True, help_text='192.168.0.1 192.168.0.2', max_length=60)),
            ],
        ),
    ]
